describe('Objets Component', () => {    beforeEach(() => {        cy.login();  // Appel de la commande login personnalisée        cy.visit('/');        // Mock les appels API        cy.intercept('GET', 'http://localhost:3000/api/utilisateurs/trans', {            statusCode: 200,            body: { id: 'user-123' },        }).as('fetchUtilisateurId');        cy.intercept('GET', 'http://localhost:3000/api/objets', {            statusCode: 200,            body: [                {                    id: 1,                    nom: 'Objet 1',                    description: 'Description de l\'objet 1',                    categorie: 'Catégorie 1',                    idUtilisateur: 'user-123',                    showInput: false,                    enEchange: false,                    idEchange: null,                },                {                    id: 2,                    nom: 'Objet 2',                    description: 'Description de l\'objet 2',                    categorie: 'Catégorie 2',                    idUtilisateur: 'user-456',                    showInput: false,                    enEchange: false,                    idEchange: null,                },            ],        }).as('fetchObjets');        // cy.intercept('GET', 'http://localhost:3000/api/echanges/all', {        //     statusCode: 200,        //     body: [],        // }).as('fetchEchanges');        // Charger la page        cy.visit('/');    });    it('devrait charger les objets et l\'utilisateur', () => {        // Vérifier que l'ID utilisateur est récupéré et les objets sont affichés        cy.wait('@fetchUtilisateurId');        cy.wait('@fetchObjets');        // Vérifier que les objets sont affichés        cy.get('.card').should('have.length', 2);        cy.get('.card').first().find('h2').should('contain', 'Objet 1');        cy.get('.card').eq(1).find('h2').should('contain', 'Objet 2');    });});